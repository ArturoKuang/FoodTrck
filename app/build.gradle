plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

def apikeyPropertiesFile = rootProject.file("apikey.properties")
def apikeyProperties = new Properties()
apikeyProperties.load(new FileInputStream(apikeyPropertiesFile))
def mapsApiKey = apikeyProperties.getProperty("GOOGLE_MAPS_API_KEY", "")

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    buildFeatures {
        viewBinding true
    }

    defaultConfig {
        applicationId "com.example.foodtrck"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField("String", "GOOGLE_MAPS_API_KEY", "\"$mapsApiKey\"")
        manifestPlaceholders = [ mapsApiKey : apikeyProperties.getProperty("GOOGLE_MAPS_API_KEY", "") ]
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation Dependencies.supportAndroidLibs
    implementation Dependencies.androidArchComponents
    implementation Dependencies.kotlin
    implementation Dependencies.google
    implementation Dependencies.libraries
    kapt Dependencies.kotlinAnnotations

    implementation 'com.google.android.gms:play-services-maps:17.0.0'
    implementation 'com.google.android.libraries.maps:maps:3.1.0-beta'
    implementation 'com.google.android.gms:play-services-basement:17.5.0'
    implementation 'com.google.android.gms:play-services-base:17.5.0'
    implementation 'com.google.android.gms:play-services-gcm:17.0.0'
    implementation 'com.google.android.gms:play-services-location:17.1.0'

    // Below is used to run the easypermissions library to manage location permissions
    // EasyPermissions is needed to help us request for permission to access location
    implementation 'pub.devrel:easypermissions:3.0.0'
}